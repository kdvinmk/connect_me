{"ast":null,"code":"import { POSTS_LOADED, POST_CREATED } from \"./types\";\nimport axios from \"axios\"; // Loads all posts\n\nexport const loadPosts = () => (dispatch, getState) => {\n  const token = getState().auth.token;\n  const config = {\n    headers: {}\n  }; // If token, then add to headers\n\n  if (token) {\n    config.headers[\"x-auth-token\"] = token;\n  }\n\n  axios.get(\"/api/posts/\", config).then(res => dispatch({\n    type: POSTS_LOADED,\n    payload: res.data\n  }));\n}; // Create a new post\n\nexport const createPost = ({\n  title,\n  description\n}) => (dispatch, getState) => {\n  console.log(title, description);\n  const token = getState().auth.token;\n  const config = {\n    headers: {}\n  };\n\n  if (token) {\n    config.headers[\"x-auth-token\"] = token;\n  }\n\n  const sendObj = {\n    title,\n    description\n  };\n  axios.post(\"/api/posts/\", config, sendObj).then(res => {\n    console.log(res);\n    dispatch({\n      type: POST_CREATED\n    });\n  });\n};","map":{"version":3,"sources":["/Users/kavinmk/Documents/WebDev_Works/connect_me/client/src/actions/postsAction.js"],"names":["POSTS_LOADED","POST_CREATED","axios","loadPosts","dispatch","getState","token","auth","config","headers","get","then","res","type","payload","data","createPost","title","description","console","log","sendObj","post"],"mappings":"AAAA,SAASA,YAAT,EAAuBC,YAAvB,QAA2C,SAA3C;AACA,OAAOC,KAAP,MAAkB,OAAlB,C,CAEA;;AACA,OAAO,MAAMC,SAAS,GAAG,MAAM,CAACC,QAAD,EAAWC,QAAX,KAAwB;AACrD,QAAMC,KAAK,GAAGD,QAAQ,GAAGE,IAAX,CAAgBD,KAA9B;AAEA,QAAME,MAAM,GAAG;AACbC,IAAAA,OAAO,EAAE;AADI,GAAf,CAHqD,CAOrD;;AACA,MAAIH,KAAJ,EAAW;AACTE,IAAAA,MAAM,CAACC,OAAP,CAAe,cAAf,IAAiCH,KAAjC;AACD;;AAEDJ,EAAAA,KAAK,CAACQ,GAAN,CAAU,aAAV,EAAyBF,MAAzB,EAAiCG,IAAjC,CAAuCC,GAAD,IACpCR,QAAQ,CAAC;AACPS,IAAAA,IAAI,EAAEb,YADC;AAEPc,IAAAA,OAAO,EAAEF,GAAG,CAACG;AAFN,GAAD,CADV;AAMD,CAlBM,C,CAoBP;;AACA,OAAO,MAAMC,UAAU,GAAG,CAAC;AAAEC,EAAAA,KAAF;AAASC,EAAAA;AAAT,CAAD,KAA4B,CAACd,QAAD,EAAWC,QAAX,KAAwB;AAC5Ec,EAAAA,OAAO,CAACC,GAAR,CAAYH,KAAZ,EAAmBC,WAAnB;AACA,QAAMZ,KAAK,GAAGD,QAAQ,GAAGE,IAAX,CAAgBD,KAA9B;AAEA,QAAME,MAAM,GAAG;AACbC,IAAAA,OAAO,EAAE;AADI,GAAf;;AAIA,MAAIH,KAAJ,EAAW;AACTE,IAAAA,MAAM,CAACC,OAAP,CAAe,cAAf,IAAiCH,KAAjC;AACD;;AAED,QAAMe,OAAO,GAAG;AACdJ,IAAAA,KADc;AAEdC,IAAAA;AAFc,GAAhB;AAKAhB,EAAAA,KAAK,CAACoB,IAAN,CAAW,aAAX,EAA0Bd,MAA1B,EAAkCa,OAAlC,EAA2CV,IAA3C,CAAiDC,GAAD,IAAS;AACvDO,IAAAA,OAAO,CAACC,GAAR,CAAYR,GAAZ;AACAR,IAAAA,QAAQ,CAAC;AACPS,MAAAA,IAAI,EAAEZ;AADC,KAAD,CAAR;AAGD,GALD;AAMD,CAvBM","sourcesContent":["import { POSTS_LOADED, POST_CREATED } from \"./types\";\nimport axios from \"axios\";\n\n// Loads all posts\nexport const loadPosts = () => (dispatch, getState) => {\n  const token = getState().auth.token;\n\n  const config = {\n    headers: {},\n  };\n\n  // If token, then add to headers\n  if (token) {\n    config.headers[\"x-auth-token\"] = token;\n  }\n\n  axios.get(\"/api/posts/\", config).then((res) =>\n    dispatch({\n      type: POSTS_LOADED,\n      payload: res.data,\n    })\n  );\n};\n\n// Create a new post\nexport const createPost = ({ title, description }) => (dispatch, getState) => {\n  console.log(title, description);\n  const token = getState().auth.token;\n\n  const config = {\n    headers: {},\n  };\n\n  if (token) {\n    config.headers[\"x-auth-token\"] = token;\n  }\n\n  const sendObj = {\n    title,\n    description,\n  };\n\n  axios.post(\"/api/posts/\", config, sendObj).then((res) => {\n    console.log(res);\n    dispatch({\n      type: POST_CREATED,\n    });\n  });\n};\n"]},"metadata":{},"sourceType":"module"}