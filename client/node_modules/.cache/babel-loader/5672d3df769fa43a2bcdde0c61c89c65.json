{"ast":null,"code":"import { REGISTER_SUCCESS, REGISTER_FAIL, LOGIN_SUCCESS, LOGIN_FAIL, USER_LOADED } from \"./types\";\nimport axios from \"axios\";\nexport const loadUser = () => (dispatch, getState) => {\n  axios.get(\"/api/users/\").then(res => {\n    const token = getState().auth.token; // Headers\n\n    const config = {\n      headers: {\n        \"content-type\": \"application/json\"\n      }\n    }; // If token, then add to headers\n\n    if (token) {\n      config.headers[\"x-auth-token\"] = token;\n    }\n\n    console.log(res.data);\n    dispatch({\n      type: USER_LOADED,\n      payload: res.data\n    });\n  });\n};\nexport const register = toSendObj => dispatch => {\n  axios.post(\"/api/users/register/\", toSendObj).then(res => {\n    console.log(res.data);\n    dispatch({\n      type: REGISTER_SUCCESS,\n      payload: res.data\n    });\n  }).catch(err => dispatch({\n    type: REGISTER_FAIL\n  }));\n};\nexport const login = toSendObj => dispatch => {\n  axios.post(\"/api/auth/\", toSendObj).then(res => {\n    console.log(res.data);\n    dispatch({\n      type: LOGIN_SUCCESS,\n      payload: res.data\n    });\n  }).catch(err => dispatch({\n    type: LOGIN_FAIL\n  }));\n};","map":{"version":3,"sources":["/Users/kavinmk/Documents/WebDev_Works/connect_me/client/src/actions/authActions.js"],"names":["REGISTER_SUCCESS","REGISTER_FAIL","LOGIN_SUCCESS","LOGIN_FAIL","USER_LOADED","axios","loadUser","dispatch","getState","get","then","res","token","auth","config","headers","console","log","data","type","payload","register","toSendObj","post","catch","err","login"],"mappings":"AAAA,SACEA,gBADF,EAEEC,aAFF,EAGEC,aAHF,EAIEC,UAJF,EAKEC,WALF,QAMO,SANP;AAOA,OAAOC,KAAP,MAAkB,OAAlB;AAEA,OAAO,MAAMC,QAAQ,GAAG,MAAM,CAACC,QAAD,EAAWC,QAAX,KAAwB;AACpDH,EAAAA,KAAK,CAACI,GAAN,CAAU,aAAV,EAAyBC,IAAzB,CAA+BC,GAAD,IAAS;AACrC,UAAMC,KAAK,GAAGJ,QAAQ,GAAGK,IAAX,CAAgBD,KAA9B,CADqC,CAGrC;;AACA,UAAME,MAAM,GAAG;AACbC,MAAAA,OAAO,EAAE;AACP,wBAAgB;AADT;AADI,KAAf,CAJqC,CAUrC;;AACA,QAAIH,KAAJ,EAAW;AACTE,MAAAA,MAAM,CAACC,OAAP,CAAe,cAAf,IAAiCH,KAAjC;AACD;;AACDI,IAAAA,OAAO,CAACC,GAAR,CAAYN,GAAG,CAACO,IAAhB;AACAX,IAAAA,QAAQ,CAAC;AACPY,MAAAA,IAAI,EAAEf,WADC;AAEPgB,MAAAA,OAAO,EAAET,GAAG,CAACO;AAFN,KAAD,CAAR;AAID,GAnBD;AAoBD,CArBM;AAuBP,OAAO,MAAMG,QAAQ,GAAIC,SAAD,IAAgBf,QAAD,IAAc;AACnDF,EAAAA,KAAK,CACFkB,IADH,CACQ,sBADR,EACgCD,SADhC,EAEGZ,IAFH,CAESC,GAAD,IAAS;AACbK,IAAAA,OAAO,CAACC,GAAR,CAAYN,GAAG,CAACO,IAAhB;AACAX,IAAAA,QAAQ,CAAC;AACPY,MAAAA,IAAI,EAAEnB,gBADC;AAEPoB,MAAAA,OAAO,EAAET,GAAG,CAACO;AAFN,KAAD,CAAR;AAID,GARH,EASGM,KATH,CASUC,GAAD,IACLlB,QAAQ,CAAC;AACPY,IAAAA,IAAI,EAAElB;AADC,GAAD,CAVZ;AAcD,CAfM;AAiBP,OAAO,MAAMyB,KAAK,GAAIJ,SAAD,IAAgBf,QAAD,IAAc;AAChDF,EAAAA,KAAK,CACFkB,IADH,CACQ,YADR,EACsBD,SADtB,EAEGZ,IAFH,CAESC,GAAD,IAAS;AACbK,IAAAA,OAAO,CAACC,GAAR,CAAYN,GAAG,CAACO,IAAhB;AACAX,IAAAA,QAAQ,CAAC;AACPY,MAAAA,IAAI,EAAEjB,aADC;AAEPkB,MAAAA,OAAO,EAAET,GAAG,CAACO;AAFN,KAAD,CAAR;AAID,GARH,EASGM,KATH,CASUC,GAAD,IACLlB,QAAQ,CAAC;AACPY,IAAAA,IAAI,EAAEhB;AADC,GAAD,CAVZ;AAcD,CAfM","sourcesContent":["import {\n  REGISTER_SUCCESS,\n  REGISTER_FAIL,\n  LOGIN_SUCCESS,\n  LOGIN_FAIL,\n  USER_LOADED,\n} from \"./types\";\nimport axios from \"axios\";\n\nexport const loadUser = () => (dispatch, getState) => {\n  axios.get(\"/api/users/\").then((res) => {\n    const token = getState().auth.token;\n\n    // Headers\n    const config = {\n      headers: {\n        \"content-type\": \"application/json\",\n      },\n    };\n\n    // If token, then add to headers\n    if (token) {\n      config.headers[\"x-auth-token\"] = token;\n    }\n    console.log(res.data);\n    dispatch({\n      type: USER_LOADED,\n      payload: res.data,\n    });\n  });\n};\n\nexport const register = (toSendObj) => (dispatch) => {\n  axios\n    .post(\"/api/users/register/\", toSendObj)\n    .then((res) => {\n      console.log(res.data);\n      dispatch({\n        type: REGISTER_SUCCESS,\n        payload: res.data,\n      });\n    })\n    .catch((err) =>\n      dispatch({\n        type: REGISTER_FAIL,\n      })\n    );\n};\n\nexport const login = (toSendObj) => (dispatch) => {\n  axios\n    .post(\"/api/auth/\", toSendObj)\n    .then((res) => {\n      console.log(res.data);\n      dispatch({\n        type: LOGIN_SUCCESS,\n        payload: res.data,\n      });\n    })\n    .catch((err) =>\n      dispatch({\n        type: LOGIN_FAIL,\n      })\n    );\n};\n"]},"metadata":{},"sourceType":"module"}